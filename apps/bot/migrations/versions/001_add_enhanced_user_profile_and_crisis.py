"""Add enhanced user profile fields and crisis management

Revision ID: 001
Revises: 
Create Date: 2024-08-28 20:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create crisis_events table
    op.create_table('crisis_events',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('trigger_words', sa.Text(), nullable=True),
        sa.Column('severity', sa.String(), nullable=True, default='HIGH'),
        sa.Column('is_resolved', sa.Boolean(), nullable=True, default=False),
        sa.Column('resolved_at', sa.DateTime(), nullable=True),
        sa.Column('resolution_method', sa.String(), nullable=True),
        sa.Column('safety_contacts_shown', sa.Boolean(), nullable=True, default=False),
        sa.Column('user_confirmed_safety', sa.Boolean(), nullable=True, default=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Add new columns to users table if they don't exist
    try:
        op.add_column('users', sa.Column('emotion_tags', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    except Exception:
        pass  # Column might already exist
    
    try:
        op.add_column('users', sa.Column('topic_tags', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    except Exception:
        pass
    
    try:
        op.add_column('users', sa.Column('ping_enabled', sa.Boolean(), nullable=True, default=True))
    except Exception:
        pass
    
    try:
        op.add_column('users', sa.Column('ping_hours_start', sa.Integer(), nullable=True, default=10))
    except Exception:
        pass
    
    try:
        op.add_column('users', sa.Column('ping_hours_end', sa.Integer(), nullable=True, default=21))
    except Exception:
        pass
    
    try:
        op.add_column('users', sa.Column('is_in_crisis', sa.Boolean(), nullable=True, default=False))
    except Exception:
        pass
    
    try:
        op.add_column('users', sa.Column('crisis_freeze_until', sa.DateTime(), nullable=True))
    except Exception:
        pass
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove added columns from users table
    try:
        op.drop_column('users', 'crisis_freeze_until')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'is_in_crisis')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'ping_hours_end')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'ping_hours_start')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'ping_enabled')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'topic_tags')
    except Exception:
        pass
    
    try:
        op.drop_column('users', 'emotion_tags')
    except Exception:
        pass
    
    # Drop crisis_events table
    op.drop_table('crisis_events')
    
    # ### end Alembic commands ###